<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Posts on Blog</title>
    <link>https://jayce.github.io/public/posts/</link>
    <description>Recent content in Posts on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>©{year}, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 15 Jan 2020 17:29:47 +0800</lastBuildDate>
    
        <atom:link href="https://jayce.github.io/public/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Nginx Slice 带来的问题</title>
        <link>https://jayce.github.io/public/posts/nginx/the-problem-with-using-slice/</link>
        <pubDate>Wed, 29 Jul 2020 11:32:53 +0800</pubDate>
        
        <atom:modified>Wed, 29 Jul 2020 11:32:53 +0800</atom:modified>
        <guid>https://jayce.github.io/public/posts/nginx/the-problem-with-using-slice/</guid>
        <description>Range &amp;amp; Update 通常，使用 HTTP 协议下载一个文件，如果文件很大，差不多 1G，下载器会同时发送多个带 Range 的请求，并行的下载文件的不同片段，等到所有片段下载完成</description>
        
        <dc:creator>jayce</dc:creator>
        
        
        
        
          
            
              <category>nginx</category>
            
          
        
        
          
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>为什么没有 debuginfo-xxx.rpm ？</title>
        <link>https://jayce.github.io/public/posts/misc/why-no-debuginfo-rpm/</link>
        <pubDate>Fri, 17 Jul 2020 14:35:10 +0800</pubDate>
        
        <atom:modified>Fri, 17 Jul 2020 14:35:10 +0800</atom:modified>
        <guid>https://jayce.github.io/public/posts/misc/why-no-debuginfo-rpm/</guid>
        <description>CentOS7 默认情况下，用 rpmbuild 命令制作 RPM 包，还会额外自动生成一个 debuginfo 的 RPM 包，无需多做配置。这个 debuginfo 包很有用， GDB、Systemtap 等调试工具都需要它，没</description>
        
        <dc:creator>jayce</dc:creator>
        
        
        
        
          
            
              <category>rpmbuild</category>
            
          
        
        
          
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Nginx Slice 模块支持 multi-ranges</title>
        <link>https://jayce.github.io/public/posts/nginx/multi-ranges-with-slice/</link>
        <pubDate>Wed, 01 Jul 2020 12:09:15 +0800</pubDate>
        
        <atom:modified>Wed, 01 Jul 2020 12:09:15 +0800</atom:modified>
        <guid>https://jayce.github.io/public/posts/nginx/multi-ranges-with-slice/</guid>
        <description>起因 起因是对一个旧项目的技术更迭。这种项目的初期，自然是要花了很长的时间来做调研。因为都是 HTTP 协议，可以先抓包观察请求和响应的内容，从中找到异</description>
        
        <dc:creator>jayce</dc:creator>
        
        
        
        
          
            
              <category>nginx</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>译｜2017｜Linux 追踪系统&amp;如何组合在一起的</title>
        <link>https://jayce.github.io/public/posts/trace/linux-tracing-system-fit-together/</link>
        <pubDate>Thu, 28 May 2020 18:40:02 +0800</pubDate>
        
        <atom:modified>Thu, 28 May 2020 18:40:02 +0800</atom:modified>
        <guid>https://jayce.github.io/public/posts/trace/linux-tracing-system-fit-together/</guid>
        <description>译者序 在 Linux 系统上用来追踪、调试的工具有很多，有内核态的、用户态的、网络、IO 等等不同层次的工具。本文翻译自 Linux tracing systems &amp;amp; how they fit together - Julia Evans，这</description>
        
        <dc:creator>jayce</dc:creator>
        
        
        
        
          
            
              <category>trace</category>
            
          
        
        
          
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>译｜2008｜User-Space Probes (Uprobes)</title>
        <link>https://jayce.github.io/public/posts/trace/user-space-probes/</link>
        <pubDate>Thu, 21 May 2020 14:07:20 +0800</pubDate>
        
        <atom:modified>Fri, 22 May 2020 00:00:00 +0000</atom:modified>
        <guid>https://jayce.github.io/public/posts/trace/user-space-probes/</guid>
        <description>译者序 这篇文章翻译自 SystemTap 项目中 uprobes.txt 文件，此文件描述了 Uprobes 的概念、工作原理、限制等内容。用途跟 Kprobes 一样，用来追踪运行在用户态的应用程序的。看提交历史，</description>
        
        <dc:creator>jayce</dc:creator>
        
        
        
        
          
            
              <category>uprobe</category>
            
          
            
              <category>trace</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>译｜2019｜Kernel Probes (Kprobes)</title>
        <link>https://jayce.github.io/public/posts/trace/kernel-kprobes/</link>
        <pubDate>Tue, 19 May 2020 11:03:35 +0800</pubDate>
        
        <atom:modified>Tue, 19 May 2020 11:03:35 +0800</atom:modified>
        <guid>https://jayce.github.io/public/posts/trace/kernel-kprobes/</guid>
        <description>译者序 这篇文章翻译自 Linux 内核源码树中的 kprobes.txt 文件，此文件描述了 Kprobes 的概念、工作原理、限制等内容。因为文件的最后一次提交是在 2019 年，所以文章标题中的年份</description>
        
        <dc:creator>jayce</dc:creator>
        
        
        
        
          
            
              <category>kprobe</category>
            
          
            
              <category>trace</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>译｜2005｜ An Introduction to Kprobes</title>
        <link>https://jayce.github.io/public/posts/trace/an-introduction-to-kprobes/</link>
        <pubDate>Sat, 11 Apr 2020 15:52:54 +0800</pubDate>
        
        <atom:modified>Sat, 11 Apr 2020 15:52:54 +0800</atom:modified>
        <guid>https://jayce.github.io/public/posts/trace/an-introduction-to-kprobes/</guid>
        <description>译者序 本文翻译自 2005 年在 LWN 发布的，一篇 KProbes 入门级的文章：An introduction to KProbes，当时的内核版本为 2.6.11。文中的配图是用 Omnigraffle.app 重新做了一份，顺着</description>
        
        <dc:creator>jayce</dc:creator>
        
        
        
        
          
            
              <category>kprobe</category>
            
          
            
              <category>trace</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>